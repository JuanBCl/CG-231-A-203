<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>203</title>
		<style>
			body { margin: 0; }
		</style>
	</head>
	<body>
		<script type="module">
			import * as THREE from 'https://unpkg.com/three/build/three.module.js';

			const scene = new THREE.Scene();
			const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

			const renderer = new THREE.WebGLRenderer();
			renderer.setSize( window.innerWidth, window.innerHeight );
			document.body.appendChild( renderer.domElement );

			//const light = new THREE.AmbientLight( 0x404040 ); // soft white light
			//scene.add( light );

			//Creacion de arreglos para la construccion de cada cubo
            const geom = [[1,1,1],[2,3,2],[3,2,3]];
            const mat=[[0x00FFFF],[0x00FF00],[0x00FFFF]];

			//Creacion de variables tipo array para almacenar la geometria y material de cada cubo
            var geometria = [];
            var materiales=[];

			//Ciclo para recorrer cada posicion de cada arreglo
            for (let i=0; i<3; i++) {
                geometria.push(new THREE.BoxGeometry(geom[i][0], geom[i][1], geom[i][2]));
                materiales.push(new THREE.MeshBasicMaterial({color: mat[i][0]}), new THREE.MeshNormalMaterial({color: mat[i][1]}), new THREE.MeshStandardMaterial({color: mat[i][2]}));
            }
			const cubo = new THREE.Mesh( geometria[1], materiales[1]);
			scene.add( cubo );
        
            
            /*
			const geometry = new THREE.BoxGeometry( 1, 1, 1 );
			const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
			const cube = new THREE.Mesh( geometry, material );
			scene.add( cube );
           */
			camera.position.z = 5;


			//Animacion de rotacion para cada cubo
			function animate() {
				requestAnimationFrame( animate );

				cubo.rotation.x += 0.01;
				cubo.rotation.y += 0.01;

				renderer.render( scene, camera );
			}

			//Fuente de luz
            var pointColor = "#ccffcc";
            var pointLight = new THREE.PointLight(pointColor);
            pointLight.distance = 100; // distancia de luz
            pointLight.position.set (0, 0, 0); // posición
            pointLight.intensity = 50; // intensidad de la luz
            pointLight.visible = true; // ¿Es visible la luz puntual
            scene.add(pointLight);

			animate();
		</script>
	</body>
</html>